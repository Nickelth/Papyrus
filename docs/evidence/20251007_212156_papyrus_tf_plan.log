[0m[1maws_db_parameter_group.pg: Refreshing state... [id=papyrus-pg16-min][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_db_instance.this[0m will be created
[0m  [32m+[0m[0m resource "aws_db_instance" "this" {
      [32m+[0m[0m address                               = (known after apply)
      [32m+[0m[0m allocated_storage                     = 20
      [32m+[0m[0m apply_immediately                     = true
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m backup_retention_period               = 1
      [32m+[0m[0m backup_target                         = (known after apply)
      [32m+[0m[0m backup_window                         = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m character_set_name                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m database_insights_mode                = (known after apply)
      [32m+[0m[0m db_name                               = "papyrus"
      [32m+[0m[0m db_subnet_group_name                  = "papyrus-rds-subnet"
      [32m+[0m[0m dedicated_log_volume                  = false
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m deletion_protection                   = false
      [32m+[0m[0m domain_fqdn                           = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "postgres"
      [32m+[0m[0m engine_lifecycle_support              = (known after apply)
      [32m+[0m[0m engine_version                        = "16"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "papyrus-pg16-dev"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t4g.micro"
      [32m+[0m[0m iops                                  = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m latest_restorable_time                = (known after apply)
      [32m+[0m[0m license_model                         = (known after apply)
      [32m+[0m[0m listener_endpoint                     = (known after apply)
      [32m+[0m[0m maintenance_window                    = (known after apply)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m multi_az                              = false
      [32m+[0m[0m nchar_character_set_name              = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m option_group_name                     = (known after apply)
      [32m+[0m[0m parameter_group_name                  = "papyrus-pg16-min"
      [32m+[0m[0m password                              = (sensitive value)
      [32m+[0m[0m password_wo                           = (write-only attribute)
      [32m+[0m[0m performance_insights_enabled          = false
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m publicly_accessible                   = false
      [32m+[0m[0m region                                = "us-west-2"
      [32m+[0m[0m replica_mode                          = (known after apply)
      [32m+[0m[0m replicas                              = (known after apply)
      [32m+[0m[0m resource_id                           = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m snapshot_identifier                   = (known after apply)
      [32m+[0m[0m status                                = (known after apply)
      [32m+[0m[0m storage_encrypted                     = true
      [32m+[0m[0m storage_throughput                    = (known after apply)
      [32m+[0m[0m storage_type                          = (known after apply)
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Owner"   = "self"
          [32m+[0m[0m "Project" = "papyrus"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Owner"   = "self"
          [32m+[0m[0m "Project" = "papyrus"
        }
      [32m+[0m[0m timezone                              = (known after apply)
      [32m+[0m[0m username                              = "papyrus"
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # aws_db_subnet_group.this[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "this" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Managed by Terraform"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "papyrus-rds-subnet"
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m region                  = "us-west-2"
      [32m+[0m[0m subnet_ids              = [
          [32m+[0m[0m "subnet-0384561db8c07163c",
          [32m+[0m[0m "subnet-08326af247b075d10",
        ]
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Owner"   = "self"
          [32m+[0m[0m "Project" = "papyrus"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Owner"   = "self"
          [32m+[0m[0m "Project" = "papyrus"
        }
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # aws_security_group.rds[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "rds" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Ingress 5432 from ECS tasks SG only"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "papyrus-rds-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-west-2"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Owner"   = "self"
          [32m+[0m[0m "Project" = "papyrus"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Owner"   = "self"
          [32m+[0m[0m "Project" = "papyrus"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0fbda65c351254bb3"
    }

[1m  # aws_vpc_security_group_ingress_rule.from_tasks_5432[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "from_tasks_5432" {
      [32m+[0m[0m arn                          = (known after apply)
      [32m+[0m[0m description                  = "ECS tasks -> RDS 5432"
      [32m+[0m[0m from_port                    = 5432
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m ip_protocol                  = "tcp"
      [32m+[0m[0m referenced_security_group_id = "sg-0afffcf8d04818381"
      [32m+[0m[0m region                       = "us-west-2"
      [32m+[0m[0m security_group_id            = (known after apply)
      [32m+[0m[0m security_group_rule_id       = (known after apply)
      [32m+[0m[0m tags_all                     = {}
      [32m+[0m[0m to_port                      = 5432
    }

[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m rds_endpoint = (known after apply)
  [32m+[0m[0m rds_port     = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
